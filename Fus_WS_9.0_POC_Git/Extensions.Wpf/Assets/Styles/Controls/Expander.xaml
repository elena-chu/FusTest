<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:extension="http://schemas.insightec.com/wpf/"
                    xmlns:converters="clr-namespace:Ws.Extensions.UI.Wpf.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    >
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Themes/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="UnPinIcon">M4,2 L4,3 L8,3 L8,2 z M3,0 L4,0 L4,1 L8,1 L9,1 L9,2 L9,3 L9,6 L8,6 L4,6 L4,7 L3,7 L3,6 L3,4 L0,4 L0,3 L3,3 L3,2 L3,1 z</Geometry>
    <Geometry x:Key="Triangle">M116,21.6 L139.1,21.6 128.35,32.349997 z</Geometry>

    <converters:GridLengthMultiConverter x:Key="GridLengthMultiConverter" />
    <converters:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />

    <ControlTemplate x:Key="PinButton" TargetType="ToggleButton">
        <Grid x:Name="LayoutRoot" Background="Transparent">
            <Border x:Name="BorderVisual"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"/>
            <Path x:Name="PathVisual"
                  Fill="{TemplateBinding Foreground}"
                  Stretch="Uniform"
                  Margin="5"
                  Data="{StaticResource UnPinIcon}"
                  RenderTransformOrigin="0.5 0.5"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  RenderOptions.EdgeMode="Aliased">
                <Path.RenderTransform>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <RotateTransform Angle="-45" />
                        </TransformGroup.Children>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="PathVisual" Property="Fill" Value="{StaticResource MainBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="LayoutTransform" TargetName="PathVisual" >
                    <Setter.Value>
                        <RotateTransform Angle="-45" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PathVisual" Property="Fill" Value="{StaticResource MainBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PathVisual" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="PinButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template" Value="{StaticResource PinButton}" />
        <Setter Property="Width" Value="19" />
        <Setter Property="Height" Value="19" />
        <Setter Property="Foreground" Value="{StaticResource StrongBrush}" />
        <Setter Property="Background" Value="{StaticResource FixedBrush}" />
    </Style>

    <Style x:Key="PinableExpanderStyle" TargetType="{x:Type Expander}" >
        <Setter Property="extension:PinnableExpander.IsPinnable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="19" />
                            <RowDefinition x:Name="ContentRow" >
                                <RowDefinition.Tag>
                                    <sys:Double>0.0</sys:Double>
                                </RowDefinition.Tag>
                                <RowDefinition.Height>
                                    <MultiBinding Converter="{StaticResource GridLengthMultiConverter}">
                                        <Binding Path="DesiredSize.Height" ElementName="Content" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </RowDefinition.Height>
                            </RowDefinition>
                        </Grid.RowDefinitions>
                        <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="HeaderBkg_PART" Fill="{StaticResource FixedBrush}" Stretch="Fill" Grid.ColumnSpan="2" StrokeThickness="0"
                                       Visibility="{Binding Visibility, ElementName=PinButton_PART}"/>
                            <ToggleButton x:Name="ExpandBtn" Grid.Column="0" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Visibility="Collapsed"
                                        />
                            <ContentPresenter x:Name="HeaderPresenter" Grid.Column="1" Margin="0,0,20,0"
                                            ContentSource="Header"
                                            IsHitTestVisible="False"
                                            HorizontalAlignment="Center"
                                            RecognizesAccessKey="True"  />
                            <ToggleButton x:Name="PinButton_PART" Style="{StaticResource PinButtonStyle}"
                                            Visibility="{Binding Path=DataContext.IsStayOpen, Converter={StaticResource InvertedBooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"
                                            />
                        </Grid>
                        <Grid x:Name="Content"
                                Grid.Row="1"
                                Background="{StaticResource BasicBrush}">
                            <ContentPresenter Margin="1" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentRow" Storyboard.TargetProperty="Tag" From="0.2" To="1" Duration="0:0:0.1" AccelerationRatio="0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentRow" Storyboard.TargetProperty="Tag" From="0.2" To="0" Duration="0:0:0.0"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="HeaderBkg"  Value="True"/>
                                <Condition Property="IsChecked" SourceName="ExpandBtn" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="IsExpanded" Value="True" />
                                <Setter Property="Background" Value="Green" TargetName="ExpandBtn" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>